--- dwm.c.o	2012-09-26 22:58:56.809755173 +0200
+++ b/dwm-6.0/dwm.c	2012-09-26 22:58:48.263088651 +0200
@@ -139,11 +139,16 @@
 } Key;
 
 typedef struct {
-	const char *symbol;
+	const char *icon;
+    const char *symbol;
 	Bool addgaps;
     void (*arrange)(Monitor *);
 } Layout;
 
+typedef struct {
+    const char *icon;
+} MonocleNumberedIcon;
+
 struct Monitor {
 	char ltsymbol[16];
 	int num;
@@ -215,6 +220,7 @@
 static Monitor *dirtomon(int dir);
 static void drawbar(Monitor *m);
 static void drawbars(void);
+static void drawicon(const char *file, XftColor col[ColLast]);
 static void drawcoloredtext(char *text);
 static void drawtext(const char *text, XftColor col[ColLast], Bool pad);
 static void enternotify(XEvent *e);
@@ -827,7 +833,7 @@
 void
 drawbar(Monitor *m) {
 	int x;
-	unsigned int i, occ = 0, urg = 0;
+	unsigned int i, occ = 0, urg = 0, n = 0;
 	XftColor *col;
 	Client *c;
 
@@ -844,8 +850,26 @@
         drawtext(tags[i].name, col, True);
 		dc.x += dc.w;
 	}
-	dc.w = blw = TEXTW(m->ltsymbol);
-	drawtext(m->ltsymbol, dc.colors[0], False);
+    blw = TEXTW(m->ltsymbol);
+
+    if(useicons) {
+        dc.w = dc.h;
+        if(selmon->lt[selmon->sellt]->arrange == monocle) {
+            for(c = m->clients; c; c = c->next)
+                if(ISVISIBLE(c))
+                    n++;
+            if(n < LENGTH(monoclenumberedicons))
+                drawicon(monoclenumberedicons[n].icon, dc.colors[0]);
+            else
+                drawicon(m->lt[m->sellt]->icon, dc.colors[0]);
+        }
+        else
+            drawicon(m->lt[m->sellt]->icon, dc.colors[0]);
+    }
+    else {
+        dc.w = blw;
+        drawtext(m->ltsymbol, dc.colors[0], False);
+    }
 	dc.x += dc.w;
 	x = dc.x;
 	dc.w = textnw(stext, strlen(stext)); // no padding
@@ -900,6 +924,21 @@
 }
 
 void
+drawicon(const char *file, XftColor col[ColLast]) {
+	Pixmap icon;
+	int px, py;
+	unsigned int pw, ph;
+
+	icon = XCreatePixmap(dpy, dc.drawable, dc.h, dc.h, 1);
+	XReadBitmapFile(dpy, dc.drawable, file, &pw, &ph, &icon, &px, &py);
+	XSetForeground(dpy, dc.gc, col[ColBG].pixel);
+	XFillRectangle(dpy, dc.drawable, dc.gc, dc.x, 0, dc.h, dc.h);
+	XSetForeground(dpy, dc.gc, col[ColFG].pixel);
+	XSetBackground(dpy, dc.gc, col[ColBG].pixel);
+	XCopyPlane(dpy, icon, dc.drawable, dc.gc, px, py, pw, ph, dc.x, dc.h/2-ph/2+py, 1);
+}
+
+void
 drawtext(const char *text, XftColor col[ColLast], Bool pad) {
 	char buf[256];
 	int i, x, y, h, len, olen;
